.TH BPE 1 "November 09 1998" "LOCAL MANUAL"
.SH NAME
bpe - examine and patch binary files
.SH SYNOPSIS
\fBbpe\fR [ \fB\-abcdeEhkKLmrwxy\fR ] [ \fB\-B\fIext\fR ] [ \fB\-l\fIn\fR ]
[ \fB\-o\fIoffset\fR ]
.br
\ \ \ \ [ \fB\-s\fIn\fR ] \fIfile\fR ...
.br
\fBbpe \-H\fR
.br
\fBbpe \-v\fR
.br
\fBbpe \-V\fR
.SH DESCRIPTION
\fIbpe\fR is a simple, screen-oriented editor for searching and editing
ordinary files in either ASCII or hexadecimal modes (directories can be
searched on many systems but not edited). Files are displayed in n-byte
pages (where n is a function of the terminal/window size) in separate
ASCII and hexadecimal windows and it is possible to switch between the
two windows as required.
.PP
The size of \fIfile\fRs that can be edited is not limited by available memory.
.SS "Command\-Line Options"
.TP 10
\fB\-a\fR
align a searched-for string or a selected address at the first column of each
window - the default is for the display to be aligned on 16-byte boundaries.
.TP
\fB\-b\fR
create a backup file with the default extension \fB.bak\fR - the \fIfile\fRname
must be no longer than the maximum number of characters allowed for a directory
entry less the characters required for the extension.
.IP
The backup file is created automatically in the current directory with the
user's effective UID, with the GID as specified in \fIcreat\fR(2) and with the
same modes and modification-time as the original \fIfile\fR. If a file of the
same name already exists the user will be given the option of replacing it. The
backup file is created only on the first access of a given \fIfile\fR in the
current \fIbpe\fR session.
.IP
A backup file will not be created for a \fIfile\fR that is opened in read-only
mode or that is not an ordinary file or if a lockfile-error is detected.
.TP
\fB\-B\fIext\fR
specify an extension for backup files instead of the default - apart from
restrictions imposed by the file-system, \fIext\fR can be no longer than 15
characters. Note that the \fB\-b\fR option or the \fBB\fR command is still
required to actually create a backup file.
.TP
\fB\-c\fR
set the cursor position on entry to an edit mode to the top, left-hand corner
of the appropriate window - by default the cursor position is set to the first
character of a searched-for ASCII/hex string after a search operation or to the
window position representing a selected address after a set-current-address
operation (the \fBC\fR command can be used to toggle cursor-positioning
on/off).
.TP
\fB\-d\fR
clear the display before accessing each file in the file list and when toggling
between the help screens - by default, \fIbpe\fR updates only those parts of
the display that need to be changed. However, this can cause problems with some
curses/terminal combinations that leave "old" data in the display. Using the
\fB\-d\fR option will overcome the problem (the \fBD\fR command can be used to
toggle display-clear on/off).
.TP
\fB\-e\fR
disable error-bell for command and file errors.
.TP
\fB\-E\fR
disable error-bell in edit modes and during string/address data-entry.
.TP
\fB\-h\fR
disable highlighting - by default, \fIbpe\fR uses highlighting in several areas
but some curses/terminal combinations have trouble with mixed highlighted and
non-highlighted characters, particularly over slow lines. The \fB\-h\fR option
will solve the problem although some of the visual convenience of \fIbpe\fR
will be lost (the \fBH\fR command can be used to toggle highlighting on/off).
.TP
\fB\-k\fR
disable \fBESC\fR as escape character - by default, \fBESC\fR (\fB0x1b\fR) is
one of the characters that can be used to exit edit-mode and to abort
string/address/data entry. This can cause timing problems, particularly over
slow lines, with terminals that use the escape character in the strings sent by
the cursor keys. If the \fB\-k\fR option is used, \fBESC\fR will no longer be
interpreted as an escape character. This option is really of significance only
if \fIbpe\fR has been compiled with keypad enabled.
.TP
\fB\-K\fR
disable keypad - this option, which is available only if \fIbpe\fR has been
compiled with keypad enabled, can be useful with some terminals (check the
compile-time defaults with the \fB\-V\fR option). The "vi-style"
cursor-movement keys remain available if the \fB\-K\fR option is used (see
under \fBEditing\fR below).
.TP
\fB\-l\fIn\fR
set the position of the target line after search and set-current-address
operations to line \fIn\fR where \fIn\fR is an integer between 1 and 15 - the
default is for the target line to be positioned at the top of the windows (i.e.
\fIn\fR = 1).
.TP
\fB\-L\fR
disable file-locking - by default a lockfile is created for a \fIfile\fR opened
in read/write mode and any other attempt to open the same file for read/write
will result in the \fIfile\fR being opened in read-only mode. The \fB\-L\fR
option disables normal creation of the lockfile although it is still created
(but removed as soon as the \fIfile\fR is open) as a check for its prior
existence. This option, which is available only if \fIbpe\fR has been compiled
with file-locking enabled, should be used with caution!
.TP
\fB\-m\fR
disable message-receive - by default the modes of the user's tty are left
unchanged. The \fB\-m\fR option will clear group-write and world-write access.
The original modes are restored on quitting \fIbpe\fR or when exiting to a
shell.
.TP
\fB\-o\fIoffset\fR
specify the start-address of the first page of a \fIfile\fR that will be
displayed when a \fIfile\fR is first accessed instead of the default of
\fB0x00\fR - the offset-address, which should be in the range from \fB0x01\fR
to \fBEOF\fR inclusive, can be either octal, decimal or hexadecimal. An octal
address should have a leading \fB0\fR and a hex address should have a leading
\fB0x\fR. If there is no leading \fB0\fR or \fB0x\fR it is taken to be a
decimal address.
.IP
The start-address will be set to \fB0x00\fR if \fIoffset\fR is outside the
legal range for a given \fIfile\fR and, in any case, will have no effect if a
\fIfile\fR has already been accessed in the current \fIbpe\fR session.
.TP
\fB\-r\fR
open all \fIfile\fRs in read-only mode. A \fIfile\fR will be opened in
read-only mode automatically regardless of the use of the \fB\-r\fR option if
it does not have write access but is otherwise accessible or if a lockfile
exists for that \fIfile\fR (see \fB\-L\fR above).
.TP
\fB\-s\fIn\fR
set the number of lines to be scrolled with the \fB+\fR and \fB\-\fR commands
to \fIn\fR where \fIn\fR is an integer greater than 1 - the default is half the
size of the editing window (i.e. 8 lines on a 24-line terminal).
.TP
\fB\-w\fR
force \fIbpe\fR to use a 24-line by 80-column display over-riding any
window-size information obtained at run-time (see \fBWindow Size\fR below).
.TP
\fB\-x\fR
do not disable XON-XOFF flow-control. It is disabled by default, partly to
avoid the possibility of an unintended \fBCTRL\-S\fR seeming to "lock" the
terminal. However, flow-control may be needed with slow terminals (particularly
on dial-up lines) but will be available with the \fB\-x\fR option only if it is
the default state.
.TP
\fB\-y\fR
disable display of the file-address represented by the cursor-position during
editing and file-address display during searching (useful on slow systems and,
particularly, with slow terminals - the \fBY\fR command can be used to toggle
address-display on/off).
.PP
A brief explanation of the command-line options will be displayed if \fIbpe\fR
is called with the \fB\-H\fR option. The version number and date will be
displayed with the \fB\-v\fR option. If the \fB\-V\fR option is used the
compile-time defaults will also be listed.
.SS "Environment-Variable Options"
.PP
Any of the command-line options (other than \fB\-H\fR, \fB\-v\fR and \fB\-V\fR)
can also be placed in the environment variable, \fBBPE\fR, to set
user-preferred, run-time defaults and should take the form, for example,
\fBBPE=\'abcedeEhkKLmrwxyB\fIext\fB\ l\fIn\fBs\fIn\fBo\fIoffset\fB\'\fR where
\fIn\fR is an integer, \fIext\fR is the required extension for any backup files
and \fIoffset\fR is the address at which \fIfile\fR-display should start (see
\fB\-o\fR under \fBCommand-Line Options\fR for the format). Note that, if
\fBB\fR or \fBo\fR is given, \fIext\fR or \fIoffset\fR respectively must be
followed by a space and the entire argument properly-enclosed in quotes if it
is not the last option on the line. The form given is appropriate for the
Bourne and Korn shells.
.PP
Any of the \fBBPE\fR options used without a corresponding command-line option
(or vice-versa) will have the effect listed under \fBCommand-Line Options\fR.
However, an option given on the command line that is already set in \fBBPE\fR
will have its action reversed.
.PP
As an example, \fBBPE=r\fR will put \fIbpe\fR into read-only mode as a run-time
default but the use of the \fB\-r\fR command-line option will then \fIenable\fR
read/write mode.
.PP
Four exceptions to this general rule are the \fB\-B\fIext\fR,
\fB\-o\fIoffset\fR, \fB\-l\fIn\fR and \fB\-s\fIn\fR command-line options where
the strings \fIext\fR and \fIoffset\fR and the values for \fIn\fR will be used
in place of anything set in \fBBPE\fR.
.SS Buffers
\fIbpe\fR maintains three main buffers - an edit buffer, a last-write buffer
and an original-data buffer. The size of the buffers is determined by the
number of lines in the editing windows but would be 256 bytes for a "standard"
24 x 80 terminal.
.PP
The edit buffer contains the data that is displayed in the editing windows.
.PP
The last-write buffer reflects any changes that have been written to disk and
is updated at each write. It is used to restore the contents of the edit
buffer to the state that obtained before any modifications were made after the
last write. The last-write buffer's contents will be the same as that of the
original-data buffer if no write has taken place.
.PP
The original-data buffer contains the data read from the disk before any edit
session for that page where a page is defined as any editing-window-sized
segment of the \fIfile\fR. The current page is that editing-window-sized
segment contained within the buffers' boundaries.
.PP
Note, therefore, that any movement outside the current-page boundaries, i.e.
moving to another page, will change the buffers' boundaries and, therefore,
their contents.
.PP
The start-address of the current page is displayed at the top-right-hand corner
of the screen.
.PP
\fIbpe\fR also maintains buffers for each \fIfile\fR in the argument list.
Various file-attributes are saved when a \fIfile\fR is first accessed which
speeds-up operations during any subsequent access in the current \fIbpe\fR
session.
.PP
The current-page, marker, last-edited-page, last-set-current-address,
last-successfully-searched-for-string and cursor-offset addresses are also
saved for each \fIfile\fR making it possible to return to a \fIfile\fR with all
previous settings intact - including any highlighting from a search operation.
.SS "Window Size"
The window-size is determined at run time. \fIbpe\fR will attempt to use all of
the available lines (unless the \fB\-w\fR option has been used) but the
80-column width is fixed. \fIbpe\fR will abort with an error if the
window/terminal has fewer than 80 columns or if it has fewer lines than the
minimum set at compile-time (this can be checked with the \fB\-V\fR option) or
fewer than 24 lines if the \fB\-w\fR option has been used.
.PP
This version of \fIbpe\fR does not respond to a \fBSIGWINCH\fR, i.e. the display
cannot be resized dynamically.
.SS "Edit-Mode Commands"
.PD 0
.TP 15
\fBCTRL\-E\fR
toggle edit-mode - can be used after entering an edit mode with either the
\fBa\fR or \fBh\fR commands.
.TP
\fBCTRL\-V\fR
escape next edit character - allows the entry of non-printing ASCII characters
in ASCII-edit mode and of single ASCII characters in hex-edit mode.
.TP
\fBCTRL\-R\fR
redraw current screen (see below).
.TP
\fBCTRL\-X\fR
set marker [\fBa\fR to \fBz\fR] to address represented by current
cursor-position.
.TP
\fBDEL\fR
single-character undo - available only for changes that have not been written
to disk.
.TP
\fBESC\fR or \fBCTRL\-C\fR
exit edit mode and abort data-entry at any prompt in command-mode
(\fBCTRL\-D\fR can also be used - it has been included to maintain
"compatibility" with the first versions of \fIbpe\fR).
.PD
.SS "Command-Mode Commands"
.PD 0
.TP 15
\fBN\fR
move to next \fIfile\fR in arg list.
.TP
\fBP\fR
move to previous \fIfile\fR in arg list.
.TP
\fBF\fR
display/select-from \fIfile\fR list.
.TP
\fBA\fR
add file to list.
.TP
\fBE\fR
edit new file.
.TP
\fBj\fR
jump to \fIfile\fR number from arg list.
.TP
\fBJ\fR
jump to \fIfile\fR name from arg list.
.TP
\fBt\fR or \fB#\fR
toggle between two-most-recently-accessed \fIfile\fRs.
.TP
\fBT\fR
show names of two-most-recently-accessed \fIfile\fRs on status-line - the name
of the current \fIfile\fR will be highlighted.
.IP
.TP
\fBb\fR or \fBg\fR
display first page.
.TP
\fBe\fR or \fBG\fR
display last page.
.TP
\fBn\fR or \fBSPACE\fR
display next page.
.TP
\fBp\fR
display previous page.
.TP
\fBCTRL\-J\fR
scroll forward 1 line.
.TP
\fB+\fR
scroll forward 8 lines (the number of lines to be scrolled with the \fB+\fR and
\fB\-\fR commands can be set with the \fB\-s\fIn\fR option).
.TP
\fBCTRL\-K\fR
scroll back 1 line.
.TP
\fB-\fR
scroll back 8 lines.
.TP
\fBs\fR
set current address.
.TP
\fBm\fR
set marker [\fBa\fR to \fBz\fR] to the current file address.
.TP
\fBM\fR
set marker [\fBa\fR to \fBz\fR] to specific address.
.TP
\fBk\fR
clear markers.
.TP
\fBX\fR
display marker, current-page, last-edit-page, set-address, string-search and
offset addresses. Note that any legal \fIbpe\fR command can be entered at the
address-screen prompt although user-confirmation is required before quitting
\fIbpe\fR directly from the prompt.
.TP
\fB`\fR or \fB\'\fR
goto address represented by marker [\fBa\fR to \fBz\fR]
.TP
\fB@\fR
goto last set-current-address
.TP
\fBo\fR
goto \fIoffset\fR address entered on the command line.
.TP
\fBx\fR
goto start-address of last-edited page.
.IP
.TP
\fBf\fR or \fB/\fR
find ASCII string (from current address)
.TP
\fBl\fR
locate hex bytes (from current address)
.TP
\fBL\fR
goto address of last successfully-searched-for string.
.IP
.TP
\fBa\fR
edit in ASCII window.
.TP
\fBh\fR
edit in hex window.
.TP
\fBC\fR
toggle cursor-positioning on/off
.TP
\fBu\fR
undo all changes to the window-buffer that have not been written to disk.
.TP
\fBU\fR
undo changes after the window-buffer has been written to disk - this facility
is available only if the current file address has not been changed.
.TP
\fBw\fR
write modified window-buffer to disk.
.TP
\fBCTRL\-E\fR
edit last command-mode entry at the file-name, search-string and address
prompts (see under \fBCommand Editing\fR below).
.IP
.TP
\fBc\fR
clear status-line
.TP
\fBD\fR
toggle display-clear on/off
.TP
\fBH\fR
toggle highlighting on/off - any highlighting already in the display will be
removed when highlighting is turned off. Turning highlighting on will restore
any highlighting that would have been in the display had highlighting not been
off or that had been there before highlighting was turned off with the
exception of any string-search highlighting that had been removed with the
\fBr\fR command.
.TP
\fBr\fR
remove highlighting - any highlighting from a search or edit will be removed
but, in the latter case, the window-buffer contents will not be changed.
Highlighting will not be turned-off. This command will have no effect if
highlighting is off.
.TP
\fBd\fR
display highlighting - restore any highlighting that has been removed with the
\fBr\fR command. The \fBd\fR command can also be used to restore highlighting
to a searched-for-string that was removed by entering an edit mode as long as
there are no unwritten window-buffer-modifications present in the display and
the string itself has not been edited. Once again, this command will have no
effect if highlighting is turned-off.
.TP
\fBR\fR or \fBCTRL\-R\fR
redraw current screen - useful for removing mailer messages and the like. The
\fBCTRL\-R\fR form can be used from within the edit modes and during data entry
at any prompt.
.TP
\fBY\fR
toggle address-display on/off
.IP
.TP
\fBB\fR
create a backup of the current \fIfile\fR (even if it has been opened in
read-only mode) regardless of whether the \fB\-b\fR command-line option has
been used. A backup can be created only of an ordinary file.
.TP
\fBW\fR
write (part-of) the current \fIfile\fR to a new file.
.TP
\fBO\fR
show status of address-display, cursor-positioning, display-clear and
highlighting options.
.TP
\fBS\fR
show \fIfile\fR information and window-buffer, file-mod, backup, lockfile and
string-search status.
.TP
\fBV\fR
show version number.
.TP
\fBq\fR
quit bpe.
.TP
\fBQ\fR
unconditional quit.
.TP
\fB!\fR
shell-escape (no arguments accepted) - runs shell set in the \fBSHELL\fR
environment variable or defaults to /bin/sh if \fBSHELL\fR is not set.
\fBCTRL\-Z\fR can also be used to initiate a shell-escape on systems on which
job-control is not available or has been disabled.
.TP
\fB?\fR
display help screens - the help screens will, where appropriate, reflect
compile and run-time defaults. As with the \fBX\fR command, any legal \fIbpe\fR
command can be entered at the help-screen prompts although user-confirmation is
required before quitting \fIbpe\fR directly from help.
.PD
.SS "Command Editing"
Simple line-editing is available when entering string/address data at an
appropriate prompt. \fBCTRL\-H\fR (or left-arrow key if keypad is enabled) will
move backwards and \fBCTRL\-L\fR (or right-arrow key) will move forwards
through an already-entered string. \fBDEL\fR will delete the single character
before the cursor or at the cursor if at the beginning of the string. Insert
mode is always on and any legal character will be inserted before the cursor.
.PP
Entering \fBCTRL\-E\fR will retrieve any string entered previously at that
prompt and make it available for editing. A string for a particular prompt is
carried across from \fIfile\fR to \fIfile\fR.
.PP
A maximum of 63 characters can be entered at any prompt at which command
editing is available. Data-entry can be aborted by entering \fBESC\fR,
\fBCTRL\-C\fR or \fBCTRL\-D\fR.
.SS "Selecting Files"
Move through the \fIfile\fRs in the argument list with the \fBN\fR, \fBP\fR,
\fBF\fR, \fBj\fR, \fBJ\fR and \fBt\fR commands.
.PP
The \fBN\fR and \fBP\fR commands will move to the next and previous \fIfile\fRs
in the argument list respectively.
.PP
The \fBF\fR command will display a numbered list of the \fIfile\fRs with the
name of the current \fIfile\fR highlighted (or marked with square brackets if
highlighting is turned off) - select the required \fIfile\fR by number. Enter
the number of the current \fIfile\fR or \fBRETURN\fR on its own to continue
editing the current \fIfile\fR. Note that the length of the \fIfile\fR name (or
path name) in the display is limited to 19 characters - only the last 18
characters are displayed, with a leading \fB>\fR to indicate that truncation
has taken place, if the name is longer than the 19-character limit (only the
last 16 are displayed for the current \fIfile\fR if highlighting is turned
off). Note, too, that the same truncation from the left is used when necessary
for the \fIfile\fR-name display at the top-left of the screen and, when
appropriate, on the status-line.
.PP
The \fBj\fR command will prompt for a number from the \fIfile\fR list - enter
the number of the current \fIfile\fR or \fBRETURN\fR on its own to continue
editing the current \fIfile\fR. Use of this command assumes that the user has
already viewed that list and, thus, knows the number. It provides a quick
method of switching between files without having to display the full list each
time. If there are only two \fIfile\fRs in the list, the \fBj\fR command will
toggle between them.
.PP
The \fBJ\fR command will prompt for a name from the \fIfile\fR list - note that
the only names that can be used are those which were present on the
command-line when \fIbpe\fR was called or which were added with the \fBA\fR or
\fBE\fR commands. Once again, if there are only two \fIfile\fRs in the list,
the \fBJ\fR command will toggle between them.
.PP
The \fBt\fR or \fB#\fR commands will toggle between the two
most-recently-accessed \fIfile\fRs from the \fIfile\fR list. The names of the
two \fIfile\fRs, with that of the current \fIfile\fR highlighted (or marked
with square brackets if highlighting is turned off), can be shown on the
status-line with the \fBT\fR command. The commands will have no effect until at
least two \fIfile\fRs have been accessed.
.PP
The \fBA\fR or \fBE\fR commands can be used to access files not already in the
\fIfile\fR list. Both commands will prompt for a file name and add the name to
the \fIfile\fR list. The \fBE\fR command will also change the current
\fIfile\fR to the new \fIfile\fR. Note that there can be no more than 60
\fIfile\fRs in the list.
.SS "Moving Through a File"
Any of the file-position commands can be used to move through a \fIfile\fR.
.PP
The \fBs\fR command will prompt for a legal address which can be either octal,
decimal or hexadecimal. An octal address should have a leading \fB0\fR and a
hex address should have a leading \fB0x\fR. If there is no leading \fB0\fR or
\fB0x\fR it is taken to be a decimal address. Note that \fIbpe\fR defines the
first byte of a file as being at address \fB0x00\fR which may cause minor
confusion when using addresses given by some other utilities that insist that
the first byte is at \fB0x01\fR.
.PP
Several "shorthand" codes can also be used at the prompt.
.PP
A legal marker [\fBa\fR to \fBz\fR] that has already been set to an address can
be entered in response instead of an actual address, a \fBB\fR or \fBE\fR will
give the address of the beginning or the end of the \fIfile\fR respectively, a
\fBC\fR will give the start-address of the current page, a \fBG\fR will give
the start-address of the last page, an \fBL\fR will give the address of the
last successfully-search-for string, an \fBO\fR will give the \fIoffset\fR
address entered on the command line, an \fBX\fR will give the start-address of
the last-edited page, an \fBS\fR will give the address entered for the last
set-address operation and entering just a \fBRETURN\fR will give the last
address entered at that prompt (this action is duplicated by the \fB@\fR
command). The last-address string can be retrieved for editing with
\fBCTRL-E\fR but the addresses represented by previously-entered "shorthand"
codes are not available.
.PP
A set-current-address operation can be aborted during address-entry (as can any
data-entry at a prompt) by entering \fBESC\fR, \fBCTRL\-C\fR or \fBCTRL\-D\fR.
.PP
Markers can be used to store addresses to enable rapid movement through a file.
.PP
Set a marker with the \fBm\fR command followed by a valid marker-identifier
[\fBa\fR to \fBz\fR] at the prompt. The selected marker will be set to the
start-address of the current page.
.PP
Set a marker to a specific address with the \fBM\fR command followed, as
before, by a valid marker-identifier [\fBa\fR to \fBz\fR] at the marker prompt
and then a legal address or "shorthand" code (see above) at the address prompt.
.PP
A marker can be set from within an edit mode to the address represented by the
current cursor position with \fBCTRL\-X\fR
.PP
All markers can be cleared with the \fBk\fR command.
.PP
Move to the address represented by a marker with the \fB\'\fR command followed
by a valid marker-identifier [\fBa\fR to \fBz\fR] at the prompt.
.PP
Move to the address of the last successfully-searched-for string, be it hex or
ASCII, with the \fBL\fR command (see under \fBSearching\fR). The string will
be highlighted in both windows if it has not been modified since the search.
.PP
Move to the start-address of the last page that was edited with the \fBx\fR
command.
.PP
The current-page, marker, last-edited-page, last-set-current-address and
last-successfully-searched-for-string addresses are saved for each \fIfile\fR
but are not carried across from \fIfile\fR to \fIfile\fR.
.SS Editing
Enter edit mode with \fBa\fR for ASCII or \fBh\fR for hex editing.
.PP
Unless the \fB\-c\fR option has been used, the cursor will be placed at the
start of a searched-for string or at the window-position representing a
selected address. If the \fB\-c\fR option has been used or if the editing
session does not follow a search or set-current-address operation the cursor
will be placed in the upper, left-hand corner of the appropriate window.
.PP
Use the "vi-style" cursor-movement keys - \fBCTRL\-J\fR (down), \fBCTRL\-K\fR
(up), \fBCTRL\-H\fR (left), \fBCTRL\-L\fR (right) and \fBCTRL\-^\fR (home) - to
place the cursor on the byte to be changed (the arrow-keys can also be used if
\fIbpe\fR was appropriately-compiled and there is a valid
\fItermcap\fR/\fIterminfo\fR entry).
.PP
Enter a printing ASCII character, i.e. from \fB0x20\fR to \fB0x7e\fR (\fB32\fR
to \fB126\fR) inclusive, or a two-digit hex value depending on the mode.
Prefixing each character with \fBCTRL\-V\fR allows characters outside the
printing-ASCII range to be entered in ASCII-edit mode or single characters to
be entered in hex-edit mode.
.PP
Note that non-printing ASCII characters will be represented in the ASCII window
by the \fB.\fR (\fB0x2e\fR) character.
.PP
Any changes will be highlighted and will be reflected in both windows. However,
any "changes" that correspond to the last-write buffer contents will not be
highlighted.
.PP
Any single ASCII character or hexadecimal digit can be returned to its former
value with \fBDEL\fR (\fB0x7f\fR).
.PP
Exit edit mode by with \fBESC\fR or \fBCTRL\-C\fR and write the modified
window-buffer to disk with \fBw\fR.
.PP
A warning will be given if an attempt is made to move to another page, to
scroll the display, to edit another \fIfile\fR or to quit the program if the
modified edit buffer has not been written to disk. The edit buffer can be
returned to its state after the last write with the \fBu\fR command. The
\fBQ\fR command can be used to quit \fIbpe\fR unconditionally after a
user-confirmation check even if buffer-modifications exist that have not been
written to disk.
.PP
If the modified edit buffer has been written to disk the changes can still be
undone with the \fBU\fR command if the current file address, i.e. the current
page, has not been changed since the write. Any changes made to the edit
buffer after the last write to disk of that buffer will also be undone by the
\fBU\fR command. Only the page represented by the edit buffer will be
affected - any changes to other pages previously written to disk will not be
undone.
.PP
The file-modification time will be restored on exit with the \fBq\fR command or
when moving to another \fIfile\fR with any of the file-selection commands
if all changes written to disk have been undone using the \fBU\fR command.
.PP
The display can be refreshed to remove any highlighting without altering the
buffer contents with the \fBr\fR command.
.SS Searching
Search for hex data with the \fBl\fR command and a string of hex digits - a
leading \fBx\fR or \fB0\fR or a trailing \fBh\fR is not required but a leading
\fB0\fR will be added if an odd number of characters is entered. The search can
be aborted during string-entry by entering \fBESC\fR, \fBCTRL\-C\fR or
\fBCTRL\-D\fR.
.PP
To search again for the same string, enter the \fBl\fR command and press
\fBRETURN\fR - if the starting address has not been adjusted the search will
start one character past the location of the last occurrence found. The
last-searched-for-string can be edited after entering \fBCTRL-E\fR and is
carried across from \fIfile\fR to \fIfile\fR.
.PP
Search for an ASCII string with the \fBf\fR or \fB/\fR command. Enter a string
at the prompt followed by \fBRETURN\fR - once again, the previous pattern is
used if no pattern is specified. Searching is case-sensitive and proceeds as
with a hex-data search.
.PP
Searching is forward from the current file address which remains unchanged if
the string is not found. Search operations do not wrap around after
end-of-file.
.PP
Following a successful search, the display is adjusted to put the first byte of
the string in the line at the top of the screen unless the \fB\-l\fIn\fR option
has been used.
.PP
The string will be highlighted in both windows unless the \fB\-h\fR option has
been used. Any highlighting of the searched-for string will be retained
following a partial-screen scroll as long as all of the string is still in the
windows but it will be removed if another search is made. It will also be
removed when entering an edit mode to avoid confusion with the highlighting of
modified data. The \fBS\fR command can be used to check if any highlighting is
the result of a string-search.
.PP
It is possible to return to the file-address of the last
successfully-searched-for string (which is saved for each \fIfile\fR) with the
\fBL\fR command (see under \fBMoving Through a File\fR).
.SS "Backups and Copies"
For obvious reasons, it is suggested that a backup copy should be made before
patching any \fIfile\fR for which the source is not available. Backups can be
made automatically with the \fB\-b\fR command-line option or manually with the
\fBB\fR command (see above).
.PP
The current \fIfile\fR, or any part of the current \fIfile\fR, can also be
written to a new file with the \fBW\fR command.
.PP
The user will be prompted for a filename and, as before, previously-entered
strings can be used by entering just \fBRETURN\fR or by entering \fBCTRL\-E\fR
for editing. If a file of the same name already exists the user will be given
the option of replacing it, appending to it or quitting.
.PP
The user will then be prompted for the current-\fIfile\fR addresses for the
segment of the \fIfile\fR that is to be written to the new file. Enter a legal
address at each prompt (see under \fBMoving Through a File\fR for the format).
Note that, if the current page is included in the address-range, any
buffer-modifications that have not been written to disk will not be written to
the new file.
.PP
The new file will be created with the user's effective UID and GID and default
permissions.
.SS Status
The \fBS\fR command will show the following information on the status-line.
.PP
.PD 0
.TP 20
\fB[ordinary file]\fR
the \fIfile\fR being examined or patched is an ordinary file.
.TP
\fB[directory]\fR
the \fIfile\fR being examined is a directory - it will have been opened in
read-only mode even if the \fB\-r\fR option has not been used.
.TP
\fB[file-error]\fR
the \fIfile\fR does not exist, it is a zero-byte file, its permissions do not
allow access or it is a special file.
.IP
.TP
\fB[read/write]\fR
the \fIfile\fR has been opened for reading and writing (normal default).
.TP
\fB[read-only]\fR
the \fIfile\fR has been opened in read-only mode because the \fB\-r\fR option
has been used or the \fIfile\fR is a directory or a file-error or
lockfile-error has been detected.
.IP
.TP
\fB[lockfile]\fR
a lockfile has been created for the \fIfile\fR being edited - any attempt by
another user to edit the same \fIfile\fR will result in it being opened in
read-only mode.
.TP
\fB[nolockfile]\fR
no lockfile has been created either because the \fIfile\fR has been opened in
read-only mode or because the \fB\-L\fR option has been used.
.TP
\fB[lockfile exists]\fR
a lockfile for the \fIfile\fR being edited has been created by another user -
as a result, the \fIfile\fR will have been opened in read-only mode.
.TP
\fB[lockfile-error]\fR
an error was detected when attempting to create, read, write-to or delete the
lockfile.
.IP
.TP
\fB[nobackup]\fR
no backup file has been created.
.TP
\fB[backup]\fR
a backup file has been created either by use of the \fB\-b\fR option or the
\fBB\fR command.
.TP
\fB[backup-error]\fR
an error was detected when attempting to create a backup file.
.IP
.TP
\fB[nomod]\fR
no modifications have been made to the edit buffer or written to disk.
.TP
\fB[buffermod]\fR
modifications have been made to the edit buffer that have not been written to
disk.
.TP
\fB[filemod]\fR
modifications have been written to disk.
.IP
.TP
\fB[search]\fR
any highlighting in the edit windows is the result of a successful search.
.PD
.SH "ENVIRONMENT VARIABLES"
\fIbpe\fR checks the \fBBPE\fR environment variable for any default run-time
options, the \fBSHELL\fR environment variable for the default shell if the
shell escape is used and, of course, the \fBTERM\fR environment variable.
.SH DIAGNOSTICS
Self explanatory. Error messages are highlighted on the status line unless the
\fB\-h\fR option has been used - information messages are not highlighted.
.PP
Program-termination is not forced on any lseek(2), read(2) or write(2) error
but the user should take any subsequent actions with care. The \fBQ\fR command
will quit the program and avoid further disk accesses apart from any associated
with the file close.
.PP
However, program-termination is forced on any close(2) error or on other than a
permission-related error when resetting the file-modification time (if
appropriate) and the last error message is retained on the display.
.SH "RETURN VALUE"
\fIbpe\fR returns 1 on error, otherwise zero.
.SH FILES
/tmp/BPE..filename
.SH "SEE ALSO"
dd(1), dump(1), od(1)
.SH AUTHOR
v1.1 written by Andreas Pleschutznig, Teichhofweg 2, 8044 Graz, Austria 
(andy@mssx.uucp)
.br
Contributions by maart@cs.vu.nl
.br
v1.2 features added by Bill Davidsen, Box 8 KW-C206, Schenectady, NY 12345
.br
v1.3 features added by andy@mssx.uucp, davidsen@crdos1.uucp and jon@joblab and
integrated by davidsen@crdos1.uucp
.br
v1.[1-3] bug-fixes, v1.4[0-8] and v2.00.nn rewrites/features-added and man page
written by Ralphe Neill (ran@dgs.monash.edu.au)
.SH BUGS
This version of \fIbpe\fR does not respond to a \fBSIGWINCH\fR signal.
.PP
The help, marker/address and file-list screens assume a 24-line by 80-column
display and are not adjusted if the display has fewer than 24 lines.
.PP
The maximum number of characters that can be entered at any prompt where
command editing is allowed is limited to 63.
.PP
Initial write-accessibility checks use the \fIaccess\fR(2) system-call - this
could lead to problems in some circumstances.
.PP
The naming convention used for lockfiles could lead to ambiguities with
similarly-named \fIfile\fRs. The first n - 4 characters of the \fIfile\fRname
are used for part of the lockfile name where n is the maximum number of
characters allowed for a filename. The \fB\-L\fR option can be used to overcome
the problem, should it arise, but it should be used with caution (see under
\fBCommand\-Line Options\fR above).
.PP
Lockfile-operation cannot be relied on when editing files under NFS.
.PP
Some versions of \fIcurses\fR(3X) do not check the \fBTERMCAP\fR or
\fBTERMINFO\fR environment variables making it impossible to use "custom"
terminal definitions.
.PP
This version of \fIbpe\fR cannot be used with special files.
