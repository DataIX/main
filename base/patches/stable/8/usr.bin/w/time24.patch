--- usr.bin/w/extern.h	(revision 209924)
+++ usr.bin/w/extern.h	(working copy)
@@ -35,7 +35,7 @@
  */
 
 
-extern	int use_ampm;
+extern	int use_time24;
 
 struct kinfo_proc;
 int	pr_attime(time_t *, time_t *);
--- usr.bin/w/pr_time.c	(revision 209924)
+++ usr.bin/w/pr_time.c	(working copy)
@@ -75,23 +75,23 @@
 		 tm.tm_year != tp.tm_year) {
 	/* The line below does not take DST into consideration */
 	/* else if (*now / 86400 != *started / 86400) { */
-		fmt = use_ampm ? L"%a%I%p" : L"%a%H";
+		fmt = use_time24 ? L"%a%H" : L"%a%I%p";
 	}
 
-	/* Default is hh:mm{am,pm}. */
+	/* Default is hh:mm. */
 	else {
-		fmt = use_ampm ? L"%l:%M%p" : L"%k:%M";
+		fmt = use_time24 ? L"%H:%M" : L"%l:%M%p";
 	}
 
 	(void)wcsftime(buf, sizeof(buf), fmt, &tp);
 	len = wcslen(buf);
 	width = wcswidth(buf, len);
 	if (len == width)
-		(void)wprintf(L"%-7.7ls", buf);
+		(void)wprintf(L" %-7.7ls", buf);
 	else if (width < 7)
-		(void)wprintf(L"%ls%.*s", buf, 7 - width, "      ");
+		(void)wprintf(L" %ls%.*s", buf, 7 - width, "      ");
 	else {
-		(void)wprintf(L"%ls", buf);
+		(void)wprintf(L" %ls", buf);
 		offset = width - 7;
 	}
 	return (offset);
--- usr.bin/w/w.c	(revision 209924)
+++ usr.bin/w/w.c	(working copy)
@@ -100,7 +100,7 @@
 int		nflag;		/* true if -n flag: don't convert addrs */
 int		dflag;		/* true if -d flag: output debug info */
 int		sortidle;	/* sort by idle time */
-int		use_ampm;	/* use AM/PM time */
+int		use_time24;	/* use 24 hour time */
 int             use_comma;      /* use comma as floats separator */
 char	      **sel_users;	/* login array of particular users selected */
 
@@ -145,7 +145,7 @@
 	char *dot;
 
 	(void)setlocale(LC_ALL, "");
-	use_ampm = (*nl_langinfo(T_FMT_AMPM) != '\0');
+	use_time24 = (*nl_langinfo(T_FMT) != '\0');
 	use_comma = (*nl_langinfo(RADIXCHAR) != ',');
 
 	/* Are we w(1) or uptime(1)? */
@@ -269,7 +269,7 @@
 #define HEADER_USER		"USER"
 #define HEADER_TTY		"TTY"
 #define HEADER_FROM		"FROM"
-#define HEADER_LOGIN_IDLE	"LOGIN@  IDLE "
+#define HEADER_LOGIN_IDLE	"LOGIN@   IDLE "
 #define HEADER_WHAT		"WHAT\n"
 #define WUSED  (W_DISPUSERSIZE + W_DISPLINESIZE + W_DISPHOSTSIZE + \
 		sizeof(HEADER_LOGIN_IDLE) + 3)	/* header width incl. spaces */ 
@@ -447,7 +447,7 @@
 	 * Print time of day.
 	 */
 	if (strftime(buf, sizeof(buf),
-	    use_ampm ? "%l:%M%p" : "%k:%M", localtime(nowp)) != 0)
+	    use_time24 ? "%H:%M" : "%l:%M%p", localtime(nowp)) != 0)
 		(void)printf("%s ", buf);
 	/*
 	 * Print how long system has been up.
